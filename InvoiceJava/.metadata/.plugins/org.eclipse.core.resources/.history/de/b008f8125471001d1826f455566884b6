package InvoiceOrg.Invoice.Controller;

import java.util.HashMap;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import InvoiceOrg.Invoice.Models.DoctorAvailability;
import InvoiceOrg.Invoice.Models.DoctorDetails;
import InvoiceOrg.Invoice.dto.BranchWiseDetailsSlotsDto;
import InvoiceOrg.Invoice.dto.DoctorAvailabilityDto;
import InvoiceOrg.Invoice.dto.ScheduledHoursOfDoctorDto;
import InvoiceOrg.Invoice.dto.Slot;
import InvoiceOrg.Invoice.dto.TrailsPageDoctors;
import InvoiceOrg.Invoice.dto.Week;
import InvoiceOrg.Invoice.dto.WeekSlots;
import InvoiceOrg.Invoice.Service.DoctorAvailabilityService;

@CrossOrigin
@RestController
@RequestMapping("/doctorAvailability")
public class DoctorAvailabilityController {
	
	@Autowired
    private DoctorAvailabilityService doctorAvailabilityService;
	
	// VERIFIED
	
	@PostMapping("/wholeSave")
	public DoctorAvailabilityDto wholeSave(@RequestBody DoctorAvailabilityDto doctorAvailability) {
		return  this.doctorAvailabilityService.wholeSave(doctorAvailability);	
	}
	
	@PutMapping("/getByDocId")
	//All branches
	public HashMap<String,List<Week>> getTimingsAllBranchesByDocId(@RequestBody DoctorAvailabilityDto doctorAvailability)  { 
	return this.doctorAvailabilityService.getTimingsAllBranchesByDocId(doctorAvailability);
	}
	
	@GetMapping("/getByDocIdBranchId")
	public List<Week> getByDocIdBranchId(@RequestParam("doctorId") int doctorId, @RequestParam("branchId") int branchId)  { 
	return this.doctorAvailabilityService.getByDocIdBranchId(doctorId,branchId);
	}
	
	@GetMapping("/getByDocDetailsId")
	public List<Week> getByDocDetailsId(@RequestParam("doctorDetailsId") int doctorDetailsId)  { 
	return this.doctorAvailabilityService.getByDocDetailsId(doctorDetailsId);
	}
	
	@GetMapping("/getSlotsByDocIdAndBranchId")
	public TrailsPageDoctors getSlotsByDocIdAndBranchId(@RequestParam("doctorId") int doctorId, @RequestParam("branchId") int branchId)  { 
	return this.doctorAvailabilityService.getDetailsSlotsByDocIdBranchId22(doctorId,branchId); 
	}
	
	@GetMapping("/getSlotsByDocId")
	public TrailsPageDoctors getDoctorsDetailsByDocIdSlots(@RequestParam("doctorId") int doctorId, @RequestParam("branchId") int branchId)  { 
	return this.doctorAvailabilityService.getDetailsSlotsByDocIdBranchId22(doctorId,branchId); 
	}
	
	@GetMapping("/getAllBranchesSlotsByDocId")
	public TrailsPageDoctors getAllBranchesSlotsByDocId(@RequestParam("doctorId") int doctorId)  { 
	return this.doctorAvailabilityService.getAllBranchesSlotsByDocId(doctorId); 
	}
	
	@GetMapping("/getDoctorDetailsByDoctorId")
	public List<DoctorAvailabilityDto> getDoctorDetailsByDoctorId( @RequestParam("doctorId") int doctorId)  {
	    return this.doctorAvailabilityService.getDoctorDetailsByDoctorId(doctorId);  
	}
	
	@GetMapping("/getAllDoctorsDetailsByDepIdBranchId")
	// List<WeekSlots> may be replaced by BranchWiseDetailsSlotsDto 
	public List<WeekSlots>  getAllDoctorsDetailsByDepIdSlots(@RequestParam("departmentId") int departmentId, @RequestParam("branchId") int branchId)  {
	return this.doctorAvailabilityService.getAllDoctorsDetailsByDepIdBranchIdSlots(departmentId,branchId);
	}
	
	@GetMapping("/getAllDetailsSlotsByDocDetailsId")
	// List<WeekSlots> may be replaced by BranchWiseDetailsSlotsDto 
	public List<TrailsPageDoctors>  getAllDetailsSlotsByDocDetailsId(@RequestParam("departmentId") int departmentId, @RequestParam("branchId") int branchId)  {
	return this.doctorAvailabilityService.getAllDetailsSlotsByDocDetailsId(departmentId,branchId);
	}
	
	
	//=====================================
	
	
	@PostMapping("/saveDoctorAvailability")
	public DoctorDetails insert(@RequestBody DoctorDetails doctorAvailability) {
		return  this.doctorAvailabilityService.insert(doctorAvailability);	
	}
	
	
	
	
	@GetMapping("/getDoctorAvailability")
	public List<DoctorDetails> get(){
		return  this.doctorAvailabilityService.get();	
	}
	
//	@GetMapping("/getWholeAllService")  
//	public List<DoctorAvailabilityDto> getAll()  {
//	return this.doctorAvailabilityService.getAll();
//	}
	

	
	


	
	@GetMapping("/getScheduledHours")
	public ScheduledHoursOfDoctorDto getScheduledHours(@RequestParam int doctorId)  {
	return this.doctorAvailabilityService.getScheduledHours(doctorId);
	}
	
	@PutMapping("/deleteWeekTimings")
	public void deleteRows( @RequestBody List<DoctorAvailability>  doctorAvailabilityList)  {
	    this.doctorAvailabilityService.deleteRows(doctorAvailabilityList);
	}
	


}
